---
apiVersion: tekton.dev/v1beta1
kind: ClusterTask
metadata:
  annotations:
    task.kubevirt.io/associatedServiceAccount: modify-vm-template-task
    templateName.params.task.kubevirt.io/kind: Template
    templateName.params.task.kubevirt.io/apiVersion: template.openshift.io/v1
    templateNamespace.params.task.kubevirt.io/kind: namespace
    cpuSockets.params.task.kubevirt.io/type: number
    cpuCores.params.task.kubevirt.io/type: number
    cpuThreads.params.task.kubevirt.io/type: number
    memory.params.task.kubevirt.io/type: memory
    deleteDatavolumeTemplate.params.task.kubevirt.io/type: boolean
  labels:
    task.kubevirt.io/type: modify-vm-template
    task.kubevirt.io/category: modify-vm-template
  name: modify-vm-template
spec:
  params:
    - name: templateName
      description: Name of an OpenShift template.
      type: string
    - name: templateNamespace
      description: Namespace of an source OpenShift template. (defaults to active namespace)
      type: string
    - name: cpuSockets
      description: Number of CPU sockets
      type: string
    - name: cpuCores
      description: Number of CPU cores
      type: string
    - name: cpuThreads
      description: Number of CPU threads
      type: string
    - name: memory
      description: Number of memory vm can use
      type: string
    - description: Template labels. If template contains same label, it will be replaced. Each param should have KEY:VAL format. Eg ["key:value", "key:value"].
      name: templateLabels
      type: array
      default: []
    - description: Template Annotations. If template contains same annotation, it will be replaced. Each param should have KEY:VAL format. Eg ["key:value", "key:value"]
      name: templateAnnotations
      type: array
      default: []
    - description: VM labels. If VM contains same label, it will be replaced. Each param should have KEY:VAL format. Eg ["key:value", "key:value"].
      name: vmLabels
      type: array
      default: []
    - description: VM annotations. If VM contains same annotation, it will be replaced. Each param should have KEY:VAL format. Eg ["key:value", "key:value"].
      name: vmAnnotations
      type: array
      default: []
    - description: 'VM disks in json format, replace vm disk if same name, otherwise new disk is appended. Eg [{"name": "test", "cdrom": {"bus": "sata"}}, {"name": "disk2"}]'
      name: disks
      type: array
      default: []
    - description: 'VM volumes in json format, replace vm volume if same name, otherwise new volume is appended. Eg [{"name": "virtiocontainerdisk", "containerDisk": {"image": "kubevirt/virtio-container-disk"}}]'
      name: volumes
      type: array
      default: []
    - description: 'Datavolume templates in json format, replace datavolume if same name, otherwise new datavolume is appended. If deleteDatavolumeTemplate is set, first datavolumes are deleted and then datavolumes from this attribute are added. Eg [{"apiVersion": "cdi.kubevirt.io/v1beta1", "kind": "DataVolume", "metadata":{"name": "test1"}, "spec": {"source": {"http": {"url": "test.somenonexisting"}}}}]'
      name: datavolumeTemplates
      type: array
      default: []
    - name: deleteDatavolumeTemplate
      description: Set to "true" or "false" if task should delete datavolume template in template and all associated volumes and disks.
      default: 'false'
      type: string

  results:
    - name: name
      description: The name of a template that was updated.
    - name: namespace
      description: The namespace of a template that was updated.
  steps:
    - name: modifyvmtemplate
      image: "quay.io/kubevirt/tekton-task-modify-vm-template:v0.7.0"
      command:
        - modify-vm-template
      args:
        - "--output=yaml"
        - "--template-labels"
        - $(params.templateLabels)
        - "--template-annotations"
        - $(params.templateAnnotations)
        - "--vm-labels"
        - $(params.vmLabels)
        - "--vm-annotations"
        - $(params.vmAnnotations)
        - "--disks"
        - $(params.disks)
        - "--volumes"
        - $(params.volumes)
        - "--datavolumeTemplates"
        - $(params.datavolumeTemplates)
      env:
        - name: TEMPLATE_NAME
          value: $(params.templateName)
        - name: TEMPLATE_NAMESPACE
          value: $(params.templateNamespace)
        - name: CPU_SOCKETS
          value: $(params.cpuSockets)
        - name: CPU_CORES
          value: $(params.cpuCores)
        - name: CPU_THREADS
          value: $(params.cpuThreads)
        - name: MEMORY
          value: $(params.memory)
        - name: DELETE_DATAVOLUME_TEMPLATE
          value: $(params.deleteDatavolumeTemplate)

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: modify-vm-template-task
rules:
  - verbs:
      - get
      - list
      - patch
    apiGroups:
      - template.openshift.io
    resources:
      - templates

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: modify-vm-template-task

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: modify-vm-template-task
roleRef:
  kind: ClusterRole
  name: modify-vm-template-task
  apiGroup: rbac.authorization.k8s.io
subjects:
  - kind: ServiceAccount
    name: modify-vm-template-task
